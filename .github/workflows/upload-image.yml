name: Build and Push API & Web

on:
  release:
    types: [published]

concurrency:
  group: build-push-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  ALIYUN_DOCKER_REGISTRY: ${{ vars.ALIYUN_DOCKER_REGISTRY || 'registry.cn-beijing.aliyuncs.com' }}
  ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_USER  }}
  ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_TOKEN  }}
  AI_SHIFU_WEB_IMAGE_NAME: ${{ vars.AI_SHIFU_WEB_IMAGE_NAME || 'ai-shifu-web' }}
  AI_SHIFU_API_IMAGE_NAME: ${{ vars.AI_SHIFU_API_IMAGE_NAME || 'ai-shifu-api' }}
  AI_SHIFU_COOK_WEB_IMAGE_NAME: ${{ vars.AI_SHIFU_COOK_WEB_IMAGE_NAME || 'ai-shifu-cook-web' }}
jobs:
  build:
    runs-on: ${{ 'ubuntu-latest' }}
    if: github.repository == 'ai-shifu/ai-shifu'
    strategy:
      matrix:
        include:
          - service_name: "build-api"
            image_name_env: "AI_SHIFU_API_IMAGE_NAME"
            context: "src/api"
          - service_name: "build-web"
            image_name_env: "AI_SHIFU_WEB_IMAGE_NAME"
            context: "src/web"
          - service_name: "build-cook-web"
            image_name_env: "AI_SHIFU_COOK_WEB_IMAGE_NAME"
            context: "src/cook-web"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Tag Version
        run: |
          # Extract version from release tag
          TAG_VERSION="${{ github.event.release.tag_name }}"
          echo "TAG_VERSION=\"$TAG_VERSION\"" >> $GITHUB_ENV
          echo "RELEASE_BUILD=true" >> $GITHUB_ENV
          echo "üè∑Ô∏è Building with tag: $TAG_VERSION"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Login to Aliyun Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ env.ALIYUN_DOCKER_USERNAME }}
          password: ${{ env.ALIYUN_DOCKER_PASSWORD }}
          registry: ${{ env.ALIYUN_DOCKER_REGISTRY }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_USER }}/${{ env[matrix.image_name_env] }}
            ${{ env.ALIYUN_DOCKER_REGISTRY }}/ai-shifu/${{ env[matrix.image_name_env] }}
          labels: |
            org.opencontainers.image.title=AI-Shifu ${{ matrix.service_name }}
            org.opencontainers.image.description=AI-led chat platform - ${{ matrix.service_name }} service
            org.opencontainers.image.vendor=AI-Shifu Team
            org.opencontainers.image.licenses=Apache-2.0 WITH Commercial-Use-Conditions
            org.opencontainers.image.source=https://github.com/ai-shifu/ai-shifu
            org.opencontainers.image.documentation=https://github.com/ai-shifu/ai-shifu/blob/main/README.md
            org.opencontainers.image.url=https://github.com/ai-shifu/ai-shifu
            org.opencontainers.image.version=${{ env.TAG_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            ai-shifu.license-file=https://github.com/ai-shifu/ai-shifu/blob/main/LICENSE.txt
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.TAG_VERSION }},enable=${{ env.RELEASE_BUILD == 'true' }}
            type=sha,prefix={{branch}}-,enable=${{ env.RELEASE_BUILD != 'true' }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: "${{ matrix.context }}"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Update Docker Hub repository description
        if: env.RELEASE_BUILD == 'true'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_USER }}/${{ env[matrix.image_name_env] }}
          short-description: "AI-Shifu ${{ matrix.service_name }} - AI-led chat platform"
          readme-filepath: ./README.md
