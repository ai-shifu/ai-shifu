"""add new user models

Revision ID: 6abcf5af2758
Revises: 63a0479d46e3
Create Date: 2025-09-25 08:42:15.076581

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "6abcf5af2758"
down_revision = "63a0479d46e3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_auth_credentials",
        sa.Column(
            "id",
            mysql.BIGINT(),
            autoincrement=True,
            nullable=False,
            comment="Unique ID",
        ),
        sa.Column(
            "credential_bid",
            sa.String(length=32),
            nullable=False,
            comment="Credential business identifier",
        ),
        sa.Column(
            "user_bid",
            sa.String(length=32),
            nullable=False,
            comment="User business identifier",
        ),
        sa.Column(
            "provider_name",
            sa.String(length=255),
            nullable=False,
            comment="Provider name",
        ),
        sa.Column(
            "subject_id", sa.String(length=255), nullable=False, comment="Subject id"
        ),
        sa.Column(
            "subject_format",
            sa.String(length=255),
            nullable=False,
            comment="Subject format",
        ),
        sa.Column(
            "identifier", sa.String(length=255), nullable=False, comment="Identifier"
        ),
        sa.Column("raw_profile", sa.Text(), nullable=False, comment="Raw profile"),
        sa.Column(
            "state",
            sa.Integer(),
            nullable=False,
            comment="Credential state: 1201=unverified, 1202=verified",
        ),
        sa.Column(
            "deleted",
            sa.SmallInteger(),
            nullable=False,
            comment="Deletion flag: 0=active, 1=deleted",
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="Creation timestamp"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="Last update timestamp"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Index("credential_bid", name="ix_user_auth_credentials_credential_bid"),
        sa.Index(
            "provider_name",
            "subject_id",
            name="ix_user_auth_credentials_provider_subject",
        ),
    )
    op.create_table(
        "user_users",
        sa.Column(
            "id",
            mysql.BIGINT(),
            autoincrement=True,
            nullable=False,
            comment="Unique ID",
        ),
        sa.Column(
            "user_bid",
            sa.String(length=32),
            nullable=False,
            comment="User business identifier",
        ),
        sa.Column(
            "user_identify",
            sa.String(length=255),
            nullable=False,
            comment="User identifier: phone or email",
        ),
        sa.Column(
            "nickname", sa.String(length=255), nullable=False, comment="User nickname"
        ),
        sa.Column(
            "avatar", sa.String(length=255), nullable=False, comment="User avatar"
        ),
        sa.Column("birthday", sa.Date(), nullable=True, comment="User birthday"),
        sa.Column(
            "language", sa.String(length=30), nullable=False, comment="User language"
        ),
        sa.Column(
            "state",
            sa.Integer(),
            nullable=False,
            comment="User state: 1101=unregistered, 1102=registered, 1103=trail, 1104=paid",
        ),
        sa.Column(
            "deleted",
            sa.SmallInteger(),
            nullable=False,
            comment="Deletion flag: 0=active, 1=deleted",
        ),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, comment="Creation timestamp"
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, comment="Last update timestamp"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_users", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_users_user_bid"), ["user_bid"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_users_user_identify"), ["user_identify"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_users_state"), ["state"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_users_deleted"), ["deleted"], unique=False
        )
    with op.batch_alter_table("user_auth_credentials", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_auth_credentials_credential_bid"),
            ["credential_bid"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_user_auth_credentials_user_bid"), ["user_bid"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_auth_credentials_state"), ["state"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_auth_credentials_deleted"), ["deleted"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    with op.batch_alter_table("user_users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_users_user_bid"))
        batch_op.drop_index(batch_op.f("ix_user_users_user_identify"))
        batch_op.drop_index(batch_op.f("ix_user_users_state"))
        batch_op.drop_index(batch_op.f("ix_user_users_deleted"))
    with op.batch_alter_table("user_auth_credentials", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_auth_credentials_credential_bid"))
        batch_op.drop_index(batch_op.f("ix_user_auth_credentials_user_bid"))
        batch_op.drop_index(batch_op.f("ix_user_auth_credentials_state"))
        batch_op.drop_index(batch_op.f("ix_user_auth_credentials_deleted"))

    op.drop_table("user_users")
    op.drop_table("user_auth_credentials")
    # ### end Alembic commands ###
