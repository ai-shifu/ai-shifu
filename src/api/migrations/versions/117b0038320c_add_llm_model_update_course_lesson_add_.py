"""add llm model ,update course ,lesson ,add user token

Revision ID: 117b0038320c
Revises: 90fcbf121671
Create Date: 2024-09-12 06:33:38.226591

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "117b0038320c"
down_revision = "49f911fd70c5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "llm_endpoint",
        sa.Column("id", mysql.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "endpoint_name",
            sa.String(length=255),
            nullable=False,
            comment="Endpoint name",
        ),
        sa.Column(
            "endpoint_url",
            sa.String(length=255),
            nullable=False,
            comment="Endpoint URL",
        ),
        sa.Column(
            "endpoint_type", sa.Integer(), nullable=False, comment="Endpoint type"
        ),
        sa.Column(
            "endpoint_key",
            sa.String(length=255),
            nullable=False,
            comment="Endpoint key",
        ),
        sa.Column(
            "endpoint_status", sa.Integer(), nullable=False, comment="Endpoint status"
        ),
        sa.Column(
            "created_user_id",
            sa.String(length=255),
            nullable=False,
            comment="Created user ID",
        ),
        sa.Column(
            "updated_user_id",
            sa.String(length=255),
            nullable=False,
            comment="Updated user ID",
        ),
        sa.Column(
            "endpoint_created",
            sa.TIMESTAMP(),
            nullable=False,
            comment="Endpoint created",
        ),
        sa.Column(
            "endpoint_updated",
            sa.TIMESTAMP(),
            nullable=False,
            comment="Endpoint updated",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "llm_generation",
        sa.Column("id", mysql.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "model_name", sa.String(length=255), nullable=False, comment="Model name"
        ),
        sa.Column(
            "endpoint_name",
            sa.String(length=255),
            nullable=False,
            comment="Endpoint name",
        ),
        sa.Column(
            "generation_model",
            sa.String(length=255),
            nullable=False,
            comment="Generation model",
        ),
        sa.Column(
            "generation_type", sa.Integer(), nullable=False, comment="Generation type"
        ),
        sa.Column(
            "generation_input", sa.Text(), nullable=False, comment="Generation prompt"
        ),
        sa.Column(
            "generation_output", sa.Text(), nullable=False, comment="Generation output"
        ),
        sa.Column(
            "generation_input_tokens",
            sa.Integer(),
            nullable=False,
            comment="Generation input tokens",
        ),
        sa.Column(
            "generation_output_tokens",
            sa.Integer(),
            nullable=False,
            comment="Generation output tokens",
        ),
        sa.Column(
            "generation_time_cost",
            sa.Integer(),
            nullable=False,
            comment="Generation time cost",
        ),
        sa.Column(
            "course_id", sa.String(length=255), nullable=False, comment="Course ID"
        ),
        sa.Column(
            "lesson_id", sa.String(length=255), nullable=False, comment="Lesson ID"
        ),
        sa.Column(
            "script_id", sa.String(length=255), nullable=False, comment="Script ID"
        ),
        sa.Column("user_id", sa.String(length=255), nullable=False, comment="User ID"),
        sa.Column(
            "generation_created",
            sa.TIMESTAMP(),
            nullable=False,
            comment="Generation created",
        ),
        sa.Column(
            "generation_updated",
            sa.TIMESTAMP(),
            nullable=False,
            comment="Generation updated",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "llm_model",
        sa.Column("id", mysql.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "model_name", sa.String(length=255), nullable=False, comment="Model name"
        ),
        sa.Column(
            "model_type", sa.String(length=255), nullable=False, comment="Model type"
        ),
        sa.Column("model_desc", sa.Text(), nullable=False, comment="Model description"),
        sa.Column("model_status", sa.Integer(), nullable=False, comment="Model status"),
        sa.Column(
            "created_user_id",
            sa.String(length=255),
            nullable=False,
            comment="Created user ID",
        ),
        sa.Column(
            "updated_user_id",
            sa.String(length=255),
            nullable=False,
            comment="Updated user ID",
        ),
        sa.Column(
            "model_created", sa.TIMESTAMP(), nullable=False, comment="Model created"
        ),
        sa.Column(
            "model_updated", sa.TIMESTAMP(), nullable=False, comment="Model updated"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_token",
        sa.Column(
            "id",
            mysql.BIGINT(),
            autoincrement=True,
            nullable=False,
            comment="Unique ID",
        ),
        sa.Column("user_id", sa.String(length=36), nullable=False, comment="User UUID"),
        sa.Column("token", sa.String(length=255), nullable=False, comment="Token"),
        sa.Column("token_type", sa.Integer(), nullable=False, comment="Token type"),
        sa.Column(
            "token_expired_at",
            sa.TIMESTAMP(),
            nullable=True,
            comment="Token expired time",
        ),
        sa.Column("created", sa.TIMESTAMP(), nullable=False, comment="Creation time"),
        sa.Column("updated", sa.TIMESTAMP(), nullable=False, comment="Update time"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("ai_course", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "course_teacher_avator",
                sa.String(length=255),
                nullable=False,
                comment="Course teacher avatar",
            )
        )
        batch_op.add_column(
            sa.Column(
                "course_default_model",
                sa.String(length=255),
                nullable=False,
                comment="Course default model",
            )
        )
        batch_op.add_column(
            sa.Column(
                "course_language",
                sa.String(length=255),
                nullable=False,
                comment="Course language",
            )
        )
        batch_op.add_column(
            sa.Column(
                "course_name_multi_language",
                sa.Text(),
                nullable=False,
                comment="Course multi language",
            )
        )
        batch_op.add_column(
            sa.Column(
                "created_user_id",
                sa.String(length=36),
                nullable=True,
                comment="created user ID",
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_user_id",
                sa.String(length=36),
                nullable=True,
                comment="updated user ID",
            )
        )

    with op.batch_alter_table("ai_lesson", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "lesson_summary", sa.Text(), nullable=False, comment="Lesson summary"
            )
        )
        batch_op.add_column(
            sa.Column(
                "lesson_language",
                sa.String(length=255),
                nullable=False,
                comment="Lesson language",
            )
        )
        batch_op.add_column(
            sa.Column(
                "lesson_name_multi_language",
                sa.Text(),
                nullable=False,
                comment="Lesson multi language",
            )
        )
        batch_op.add_column(
            sa.Column(
                "ask_count_limit",
                sa.Integer(),
                nullable=False,
                comment="Ask count limit",
            )
        )
        batch_op.add_column(
            sa.Column(
                "ask_model",
                sa.String(length=255),
                nullable=False,
                comment="Ask count model",
            )
        )
        batch_op.add_column(
            sa.Column(
                "ask_prompt", sa.Integer(), nullable=False, comment="Ask count history"
            )
        )
        batch_op.add_column(
            sa.Column(
                "created_user_id",
                sa.String(length=36),
                nullable=True,
                comment="created user ID",
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_user_id",
                sa.String(length=36),
                nullable=True,
                comment="updated user ID",
            )
        )

    with op.batch_alter_table("ai_lesson_script", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "ask_count_limit",
                sa.Integer(),
                nullable=False,
                comment="Ask count limit",
            )
        )
        batch_op.add_column(
            sa.Column(
                "ask_model",
                sa.String(length=255),
                nullable=False,
                comment="Ask count model",
            )
        )
        batch_op.add_column(
            sa.Column(
                "ask_prompt", sa.Integer(), nullable=False, comment="Ask count history"
            )
        )
        batch_op.add_column(
            sa.Column(
                "created_user_id",
                sa.String(length=36),
                nullable=True,
                comment="created user ID",
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_user_id",
                sa.String(length=36),
                nullable=True,
                comment="updated user ID",
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("ai_lesson_script", schema=None) as batch_op:
        batch_op.drop_column("updated_user_id")
        batch_op.drop_column("created_user_id")
        batch_op.drop_column("ask_prompt")
        batch_op.drop_column("ask_model")
        batch_op.drop_column("ask_count_limit")

    with op.batch_alter_table("ai_lesson", schema=None) as batch_op:
        batch_op.drop_column("updated_user_id")
        batch_op.drop_column("created_user_id")
        batch_op.drop_column("ask_prompt")
        batch_op.drop_column("ask_model")
        batch_op.drop_column("ask_count_limit")
        batch_op.drop_column("lesson_name_multi_language")
        batch_op.drop_column("lesson_language")
        batch_op.drop_column("lesson_summary")

    with op.batch_alter_table("ai_course", schema=None) as batch_op:
        batch_op.drop_column("updated_user_id")
        batch_op.drop_column("created_user_id")
        batch_op.drop_column("course_name_multi_language")
        batch_op.drop_column("course_language")
        batch_op.drop_column("course_default_model")
        batch_op.drop_column("course_teacher_avator")

    op.drop_table("user_token")
    op.drop_table("llm_model")
    op.drop_table("llm_generation")
    op.drop_table("llm_endpoint")
    # ### end Alembic commands ###
