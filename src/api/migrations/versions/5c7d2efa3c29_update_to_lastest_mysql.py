"""update to lastest mysql step 2

Revision ID: 5c7d2efa3c29
Revises: 703c01ae4e83
Create Date: 2025-08-16 15:39:47.420693

"""

from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "5c7d2efa3c29"
down_revision = "703c01ae4e83"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("active", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("active_user_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_auth", schema=None) as batch_op:
        batch_op.alter_column(
            "updated_at",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_buy_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_lesson_attend", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_lesson_attendscript", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_lesson", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_lesson_script", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("discount", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("discount_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("pingxx_order", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("risk_control_result", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_conversion", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_feedback", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_info", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_profile", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_token", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment="Update time",
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_token", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_profile", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_info", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_feedback", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("user_conversion", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("risk_control_result", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("pingxx_order", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("discount_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("discount", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_lesson_script", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_lesson", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_lesson_attendscript", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_lesson_attend", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_buy_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course_auth", schema=None) as batch_op:
        batch_op.alter_column(
            "updated_at",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("ai_course", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("active_user_record", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    with op.batch_alter_table("active", schema=None) as batch_op:
        batch_op.alter_column(
            "updated",
            existing_type=mysql.TIMESTAMP(),
            comment=None,
            existing_comment="Update time",
            existing_nullable=False,
        )

    # ### end Alembic commands ###
